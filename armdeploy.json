{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "variables": {
        "storageAccountName": "[concat('stor', uniqueString(resourceGroup().id))]",
        "cosmosAccountName": "[concat('csms', uniqueString(resourceGroup().id))]",
        "appServicePlanName": "[concat('plan', uniqueString(resourceGroup().id))]",
        "webAppName": "[concat('weba', uniqueString(resourceGroup().id))]",
        "functionAppName": "[concat('func', uniqueString(resourceGroup().id))]",
        "containerStorageInstanceName": "[concat('cont', uniqueString(resourceGroup().id))]",
        "containerCosmosInstanceName": "[concat('conc', uniqueString(resourceGroup().id))]",
        "cosmosPrimaryRegion": "eastus",
        "cosmosDatabaseName": "ContosoSpaces",
        "cosmosContainerName": "Locations",
        "cosmosContainerPartitionKey": "/territory",
        "cosmosContainerThroughput": "1000",
        "populateStorageContainerImage": "msusdev/contoso.spaces.populate.storage",
        "populateCosmosContainerImage": "msusdev/contoso.spaces.populate.cosmos",
        "webContainerImage": "msusdev/contoso.spaces.web",
        "functionContainerImage": "msusdev/contoso.spaces.api.cosmos"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[variables('cosmosAccountName')]",
            "apiVersion": "2020-03-01",
            "location": "[resourceGroup().location]",
            "kind": "GlobalDocumentDB",
            "properties": {
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "Strong"
                },
                "locations": [
                    {
                        "locationName": "[variables('cosmosPrimaryRegion')]",
                        "failoverPriority": 0,
                        "isZoneRedundant": false
                    }
                ],
                "databaseAccountOfferType": "Standard"
            },
            "resources": [
                {
                    "type": "sqlDatabases",
                    "name": "[variables('cosmosDatabaseName')]",
                    "apiVersion": "2020-03-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]"
                    ],
                    "properties": {
                        "resource": {
                            "id": "[variables('cosmosDatabaseName')]"
                        },
                        "options": {
                        }
                    },
                    "resources": [
                        {
                            "type": "containers",
                            "name": "[variables('cosmosContainerName')]",
                            "apiVersion": "2020-03-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]",
                                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "[variables('cosmosContainerName')]",
                                    "partitionKey": {
                                        "paths": [
                                            "[variables('cosmosContainerPartitionKey')]"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                        ]
                                    }
                                },
                                "options": {
                                    "throughput": "[variables('cosmosContainerThroughput')]"
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "properties": {
                "accessTier": "Hot"
            },
            "resources": [
                {
                    "name": "default/images",
                    "type": "blobServices/containers",
                    "apiVersion": "2019-06-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
                    ],
                    "properties": {
                        "publicAccess": "Blob"
                    }
                }
            ]
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "name": "[variables('containerStorageInstanceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "populate",
                        "properties": {
                            "image": "[variables('populateStorageContainerImage')]",
                            "environmentVariables": [
                                {
                                    "name": "ConnectionStrings__AzureStorage",
                                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-04-01').keys[0].value, ';')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 4.0,
                                    "memoryInGb": 8.0
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "name": "[variables('containerCosmosInstanceName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosAccountName'), variables('cosmosDatabaseName'), variables('cosmosContainerName'))]"
            ],
            "properties": {
                "containers": [
                    {
                        "name": "populate",
                        "properties": {
                            "image": "[variables('populateCosmosContainerImage')]",
                            "environmentVariables": [
                                {
                                    "name": "ConnectionStrings__AzureCosmosDb",
                                    "value": "[concat('AccountEndpoint=https://', variables('cosmosAccountName'),'.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2019-08-01').primaryMasterKey, ';')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "cpu": 4.0,
                                    "memoryInGb": 8.0
                                }
                            }
                        }
                    }
                ],
                "restartPolicy": "OnFailure",
                "osType": "Linux"
            }
        },
        {
            "name": "[variables('functionAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosAccountName'), variables('cosmosDatabaseName'), variables('cosmosContainerName'))]",
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('containerStorageInstanceName'))]",
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('containerCosmosInstanceName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
            ],
            "kind": "functionapp",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "https://index.docker.io"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-04-01').keys[0].value, ';')]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "10.14.1"
                        },
                        {
                            "name": "CosmosConnectionString",
                            "value": "[concat('AccountEndpoint=https://', variables('cosmosAccountName'),'.documents.azure.com:443/;AccountKey=', listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName')), '2019-08-01').primaryMasterKey, ';')]"
                        }
                    ],
                    "appCommandLine": "",
                    "linuxFxVersion": "[concat('DOCKER|', variables('functionContainerImage'))]"
                }
            }
        },
        {
            "name": "[variables('appServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "S1"
            },
            "kind": "linux",
            "properties": {
                "reserved": true
            }
        },
        {
            "name": "[variables('webAppName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosAccountName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', variables('cosmosAccountName'), variables('cosmosDatabaseName'))]",
                "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers', variables('cosmosAccountName'), variables('cosmosDatabaseName'), variables('cosmosContainerName'))]",
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('containerStorageInstanceName'))]",
                "[resourceId('Microsoft.ContainerInstance/containerGroups', variables('containerCosmosInstanceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "https://index.docker.io"
                        },
                        {
                            "name": "ResourceData__BlobContainerUri",
                            "value": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2019-04-01').primaryEndpoints.blob, 'images/')]"
                        },
                        {
                            "name": "ConnectionData__GetFeaturedLocationsApiUrl",
                            "value": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2018-11-01').defaultHostName, '/api/getfeaturedlocations')]"
                        },
                        {
                            "name": "ConnectionData__GetAllLocationsApiUrl",
                            "value": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2018-11-01').defaultHostName, '/api/getalllocations')]"
                        },
                        {
                            "name": "ConnectionData__GetSpecificLocationApiUrl",
                            "value": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('functionAppName')), '2018-11-01').defaultHostName, '/api/getspecificlocation')]"
                        }
                    ],
                    "appCommandLine": "",
                    "linuxFxVersion": "[concat('DOCKER|', variables('webContainerImage'))]"
                }
            }
        }
    ],
    "outputs": {
        "WebApplicationUri": {
            "value": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('webAppName')), '2018-11-01').defaultHostName)]",
            "type": "string"
        }
    }
}